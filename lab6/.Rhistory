install.packages("data.tree")
install.packages("data.tre")
install.packages("data.tree")
install.packages("Rtools")
install.packages("Rtools")
install.pacj
install.packages("data.tree")
install.packages("data.tree")
install.packages("devtools")
install.packages("data.tree")
install.packages("pak")
install.packages("data.tree")
library(devtools)
install.packages("data.tree")
install.packages("Rtools")
install.packages("Rtools")
install.packages("C:/Users/MaksioloLaptop/Desktop/mgr/APU/ahp_0.2.12.tar")
library(ahp)
library(DiagrammeR)
library(data.tree)
library(R6)
install.packages("ahp")
install.packages("ahp")
install.packages("C:/Users/MaksioloLaptop/Desktop/mgr/APU/ahp_0.2.4.tar")
install.packages("C:/Users/MaksioloLaptop/Desktop/mgr/APU/ahp_0.2.7.tar")
install.packages("C:/Users/MaksioloLaptop/Desktop/mgr/APU/ahp_0.2.8.tar")
install.packages("C:/Users/MaksioloLaptop/Desktop/mgr/APU/ahp_0.2.10.tar")
install.packages("C:/Users/MaksioloLaptop/Desktop/mgr/APU/ahp_0.2.11.tar")
install.packages("C:/Users/MaksioloLaptop/Desktop/mgr/APU/ahp_0.2.12.tar")
lodowki <- read.csv("C:/Users/MaksioloLaptop/Desktop/mgr/APU/lab3/lodowki.csv")
pojemnosc <- df[["pojemnosc"]]
lodowki <- read.csv("C:/Users/MaksioloLaptop/Desktop/mgr/APU/lab2/program/lodowki_data.csv")
pojemnosc <- df[["pojemnosc_uzytkowa_chlodziarki"]]
lodowki <- read.csv("C:/Users/MaksioloLaptop/Desktop/mgr/APU/lab3/lodowki.csv")
library("neuralnet")
lodowki <- read.csv("C:/Users/MaksioloLaptop/Desktop/mgr/APU/lab3/lodowki.csv")
cena1 <- normalize(lodowki$cena)
cena1 <- log(lodowki$cena)
cena1
lodowki <- lodowki[,-5]
lodowki <- lodowki[,-1]
lodowki
pojemnosc_chlodziarki1 <- log(lodowki$pojemnosc_uzytkowa_chlodziarki)
pojemnosc_chlodziarki1
pojemnosc_zamrazarki1 <- log(lodowki$pojemnosc_uzytkowa_zamrazarki)
pojemnosc_zamrazarki1
lodowki <-cbind(lodowki,cena1,pojemnosc_chlodziarki1,pojemnosc_zamrazarki1)
lodowki
net.price <-neuralnet(cena1~pojemnosc_chlodziarki1+pojemnosc_zamrazarki1,lodowki,hidden=c(3,2),threshold = =0.01)
net.price <-neuralnet(cena1~pojemnosc_chlodziarki1+pojemnosc_zamrazarki1,lodowki,hidden=c(3,2),threshold = 0.01)
plot(net.price)
> save.image("C:/Users/MaksioloLaptop/Desktop/mgr/APU/lab3/zadanie2/Lab3_2.RData")
save.image("C:/Users/MaksioloLaptop/Desktop/mgr/APU/lab3/zadanie2/Lab3_2.RData")
library("C50")
library("MASS")
data("Aids2")
head(Aids2)
treeModel <- C5.0(x=Aids2[,-6],y=Aids2$T.categ)
treeModel
summary(treeModel)
plot(treeMOdel)
plot(treeModel)
save.image("C:/Users/MaksioloLaptop/Desktop/mgr/APU/lab5/5_1/Lab5_1.RData")
library("mlr")
install.packages("mlr")
install.packages("DiscriMiner")
library("DiscriMiner")
load("C:/Users/MaksioloLaptop/Desktop/mgr/APU/lab1/program/lab1/APU1.RData")
View(lodowki)
lodowki[,c(2,4)]
lodowki[,-4]
load("C:/Users/MaksioloLaptop/Desktop/mgr/APU/lab2/program/.RData")
load("C:/Users/MaksioloLaptop/Desktop/mgr/APU/lab3/zadanie1/Lab3_1.RData")
load("C:/Users/MaksioloLaptop/Desktop/mgr/APU/lab3/zadanie1/Lab3_1.RData")
plot(net.sqrt,rep="best")
setwd("C:/Users/MaksioloLaptop/Desktop/mgr/APU/lab6")
install.packages("tensorflow")
library(tensorflow)
install_tensorflow
install_tensorflow()
Y
install.packages("keras")
library(keras)
install_keras
fashionMnist <- dataset_fashion_mnist()
X_train <-fashionMnist$train$x
X_test <- fashionMnist$test$x
Y_train <- fashionMnist$train$y
Y_test <- fashionMnist$test$y
X_train_norm <- X_train/255
X_test_norm <- X_test/255
Y_train_class <- to_categorical(y_train,num_classes = 100)
Y_train_class <- to_categorical(Y_train,num_classes = 100)
Y_test_class <- to_categorical(Y_test,num_classes = 100)
model <- keras_model_sequential() %>%
layer_flatten(input_shape = c(32,32,3)) %>%
layer_dense(units=128,activation = "relu")%>%
layer_dense(units=100,activation = "softmax")
summary(model)
model %>% compile(
loss = "categorical_crossentropy",
optimizer = optimizer_adam(),
metrics=c("accuracy")
)
model %>% evaluate(X_test_norm,Y_test_class)
model %>% predict(X_test_norm) %>% k_argmin()
save.image()
exit
model %>% evaluate(X_test_norm,Y_test_class)
save.image("lab6.Rdata")
